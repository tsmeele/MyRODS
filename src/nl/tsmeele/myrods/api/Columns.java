package nl.tsmeele.myrods.api;

/** List of column names/id used by general query API calls.
 * @author Ton Smeele
 *
 */
public enum Columns {
	/* R_ZONE_MAIN: */
	ZONE_ID(101),
	ZONE_NAME(102),
	ZONE_TYPE(103),
	ZONE_CONNECTION(104),
	ZONE_COMMENT(105),
	ZONE_CREATE_TIME(106),
	ZONE_MODIFY_TIME(107),

	/* R_USER_MAIN: */
	USER_ID(201),
	USER_NAME(202),
	USER_TYPE(203),
	USER_ZONE(204),
	USER_INFO(206),
	USER_COMMENT(207),
	USER_CREATE_TIME(208),
	USER_MODIFY_TIME(209),
	USER_DN_INVALID(205), /* For backward compatibility, irods 2.1 DN */

	/* R_RESC_MAIN: */
	RESC_ID(301),
	RESC_NAME(302),
	RESC_ZONE_NAME(303),
	RESC_TYPE_NAME(304),
	RESC_CLASS_NAME(305),
	RESC_LOC(306),
	RESC_VAULT_PATH(307),
	RESC_FREE_SPACE(308),
	RESC_INFO(309),
	RESC_COMMENT(310),
	RESC_CREATE_TIME(311),
	RESC_MODIFY_TIME(312),
	RESC_STATUS(313),
	FREE_SPACE_TIME(314),
	RESC_CHILDREN(315),
	RESC_CONTEXT(316),
	RESC_PARENT(317),
	RESC_PARENT_CONTEXT(318),
	RESC_MODIFY_TIME_MILLIS(319),

	/* R_DATA_MAIN: */
	DATA_ID(401),
	DATA_COLL_ID(402),
	DATA_NAME(403),
	DATA_REPL_NUM(404),
	DATA_VERSION(405),
	DATA_TYPE_NAME(406),
	DATA_SIZE(407),
	//   DATA_VERSION ?
	//   DATA_USER_NAME ?
	//   DATA_ZONE_NAME ?
	DATA_RESC_NAME(409),
	DATA_PATH(410),
	DATA_OWNER_NAME(411),
	DATA_OWNER_ZONE(412),
	DATA_REPL_STATUS(413), /* isDirty */
	DATA_STATUS(414),
	DATA_CHECKSUM(415),
	DATA_EXPIRY(416),
	DATA_MAP_ID(417),
	DATA_COMMENTS(418),
	DATA_CREATE_TIME(419),
	DATA_MODIFY_TIME(420),
	DATA_MODE(421),
	DATA_RESC_HIER(422),
	DATA_RESC_ID(423),

	/* R_COLL_MAIN */
	COLL_ID(500),
	COLL_NAME(501),
	COLL_PARENT_NAME(502),
	COLL_OWNER_NAME(503),
	COLL_OWNER_ZONE(504),
	COLL_MAP_ID(505),
	COLL_INHERITANCE(506),
	COLL_COMMENTS(507),
	COLL_CREATE_TIME(508),
	COLL_MODIFY_TIME(509),
	//   COLL_USER_NAME ?
	//   COLL_USER_ZONE ?
	COLL_TYPE(510),
	COLL_INFO1(511),
	COLL_INFO2(512),

	/* R_META_MAIN */
	META_DATA_ATTR_NAME(600),
	META_DATA_ATTR_VALUE(601),
	META_DATA_ATTR_UNITS(602),
	META_DATA_ATTR_ID(603),
	META_DATA_CREATE_TIME(604),
	META_DATA_MODIFY_TIME(605),
	META_COLL_ATTR_NAME(610),
	META_COLL_ATTR_VALUE(611),
	META_COLL_ATTR_UNITS(612),
	META_COLL_ATTR_ID(613),
	META_COLL_CREATE_TIME(614),
	META_COLL_MODIFY_TIME(615),
	META_NAMESPACE_COLL(620),
	META_NAMESPACE_DATA(621),
	META_NAMESPACE_RESC(622),
	META_NAMESPACE_USER(623),
	META_NAMESPACE_RESC_GROUP(624),
	META_NAMESPACE_RULE(625),
	META_NAMESPACE_MSRVC(626),
	META_NAMESPACE_MET2(627),
	META_RESC_ATTR_NAME(630),
	META_RESC_ATTR_VALUE(631),
	META_RESC_ATTR_UNITS(632),
	META_RESC_ATTR_ID(633),
	META_RESC_CREATE_TIME(634),
	META_RESC_MODIFY_TIME(635),
	META_USER_ATTR_NAME(640),
	META_USER_ATTR_VALUE(641),
	META_USER_ATTR_UNITS(642),
	META_USER_ATTR_ID(643),
	META_USER_CREATE_TIME(644),
	META_USER_MODIFY_TIME(645),
	META_RESC_GROUP_ATTR_NAME(650),
	META_RESC_GROUP_ATTR_VALUE(651),
	META_RESC_GROUP_ATTR_UNITS(652),
	META_RESC_GROUP_ATTR_ID(653),
	META_RESC_GROUP_CREATE_TIME(654),
	META_RESC_GROUP_MODIFY_TIME(655),
	META_RULE_ATTR_NAME(660),
	META_RULE_ATTR_VALUE(661),
	META_RULE_ATTR_UNITS(662),
	META_RULE_ATTR_ID(663),
	META_RULE_CREATE_TIME(664),
	META_RULE_MODIFY_TIME(665),
	META_MSRVC_ATTR_NAME(670),
	META_MSRVC_ATTR_VALUE(671),
	META_MSRVC_ATTR_UNITS(672),
	META_MSRVC_ATTR_ID(673),
	META_MSRVC_CREATE_TIME(674),
	META_MSRVC_MODIFY_TIME(675),
	META_MET2_ATTR_NAME(680),
	META_MET2_ATTR_VALUE(681),
	META_MET2_ATTR_UNITS(682),
	META_MET2_ATTR_ID(683),
	META_MET2_CREATE_TIME(684),
	META_MET2_MODIFY_TIME(685),

	/* R_OBJT_ACCESS */
	DATA_ACCESS_TYPE(700),
	DATA_ACCESS_NAME(701),
	DATA_TOKEN_NAMESPACE(702),
	DATA_ACCESS_USER_ID(703),
	DATA_ACCESS_DATA_ID(704),
	COLL_ACCESS_TYPE(710),
	COLL_ACCESS_NAME(711),
	COLL_TOKEN_NAMESPACE(712),
	COLL_ACCESS_USER_ID(713),
	COLL_ACCESS_COLL_ID(714),
	RESC_ACCESS_TYPE(720),
	RESC_ACCESS_NAME(721),
	RESC_TOKEN_NAMESPACE(722),
	RESC_ACCESS_USER_ID(723),
	RESC_ACCESS_RESC_ID(724),
	META_ACCESS_TYPE(730),
	META_ACCESS_NAME(731),
	META_TOKEN_NAMESPACE(732),
	META_ACCESS_USER_ID(733),
	META_ACCESS_META_ID(734),
	RULE_ACCESS_TYPE(740),
	RULE_ACCESS_NAME(741),
	RULE_TOKEN_NAMESPACE(742),
	RULE_ACCESS_USER_ID(743),
	RULE_ACCESS_RULE_ID(744),
	MSRVC_ACCESS_TYPE(750),
	MSRVC_ACCESS_NAME(751),
	MSRVC_TOKEN_NAMESPACE(752),
	MSRVC_ACCESS_USER_ID(753),
	MSRVC_ACCESS_MSRVC_ID(754),

	/* R_USER_GROUP / USER */
	USER_GROUP_ID(900),
	USER_GROUP_NAME(901),

	/* R_RULE_EXEC */
	RULE_EXEC_ID(1000),
	RULE_EXEC_NAME(1001),
	RULE_EXEC_REI_FILE_PATH(1002),
	RULE_EXEC_USER_NAME(1003),
	RULE_EXEC_ADDRESS(1004),
	RULE_EXEC_TIME(1005),
	RULE_EXEC_FREQUENCY(1006),
	RULE_EXEC_PRIORITY(1007),
	RULE_EXEC_ESTIMATED_EXE_TIME(1008),
	RULE_EXEC_NOTIFICATION_ADDR(1009),
	RULE_EXEC_LAST_EXE_TIME(1010),
	RULE_EXEC_STATUS(1011),
	RULE_EXEC_CONTEXT(1012),

	/* R_TOKN_MAIN */
	TOKEN_NAMESPACE(1100),
	TOKEN_ID(1101),
	TOKEN_NAME(1102),
	TOKEN_VALUE(1103),
	TOKEN_VALUE2(1104),
	TOKEN_VALUE3(1105),
	TOKEN_COMMENT(1106),
	TOKEN_CREATE_TIME(1107),
	TOKEN_MODIFY_TIME(1108),

	/* R_OBJT_AUDIT */
	AUDIT_OBJ_ID(1200),
	AUDIT_USER_ID(1201),
	AUDIT_ACTION_ID(1202),
	AUDIT_COMMENT(1203),
	AUDIT_CREATE_TIME(1204),
	AUDIT_MODIFY_TIME(1205),


	/* R_COLL_USER_MAIN r_user_main for Collection information */
	COLL_USER_NAME(1300),
	COLL_USER_ZONE(1301),

	/* R_DATA_USER_MAIN r_user_main for Data information specifically */
	DATA_USER_NAME(1310),
	DATA_USER_ZONE(1311),

	/* R_DATA_USER_MAIN r_user_main for Data information specifically) */
	RESC_USER_NAME(1320),
	RESC_USER_ZONE(1321),

	/* R_SERVER_LOAD */
	SL_HOST_NAME(1400),
	SL_RESC_NAME(1401),
	SL_CPU_USED(1402),
	SL_MEM_USED(1403),
	SL_SWAP_USED(1404),
	SL_RUNQ_LOAD(1405),
	SL_DISK_SPACE(1406),
	SL_NET_INPUT(1407),
	SL_NET_OUTPUT(1408),
	SL_CREATE_TIME(1409),

	/* R_SERVER_LOAD_DIGEST */
	SLD_RESC_NAME(1500),
	SLD_LOAD_FACTOR(1501),
	SLD_CREATE_TIME(1502),

	/* R_USER_AUTH for GSI/KRB */
	USER_AUTH_ID(1600),
	USER_DN(1601),

	/* R_RULE_MAIN */
	RULE_ID(1700),
	RULE_VERSION(1701),
	RULE_BASE_NAME(1702),
	RULE_NAME(1703),
	RULE_EVENT(1704),
	RULE_CONDITION(1705),
	RULE_BODY(1706),
	RULE_RECOVERY(1707),
	RULE_STATUS(1708),
	RULE_OWNER_NAME(1709),
	RULE_OWNER_ZONE(1710),
	RULE_DESCR_1(1711),
	RULE_DESCR_2(1712),
	RULE_INPUT_PARAMS(1713),
	RULE_OUTPUT_PARAMS(1714),
	RULE_DOLLAR_VARS(1715),
	RULE_ICAT_ELEMENTS(1716),
	RULE_SIDEEFFECTS(1717),
	RULE_COMMENT(1718),
	RULE_CREATE_TIME(1719),
	RULE_MODIFY_TIME(1720),

	/* R_RULE_BASE_MAP for storing versions of the rules */
	RULE_BASE_MAP_VERSION(1721),
	RULE_BASE_MAP_BASE_NAME(1722),
	RULE_BASE_MAP_OWNER_NAME(1723),
	RULE_BASE_MAP_OWNER_ZONE(1724),
	RULE_BASE_MAP_COMMENT(1725),
	RULE_BASE_MAP_CREATE_TIME(1726),
	RULE_BASE_MAP_MODIFY_TIME(1727),
	RULE_BASE_MAP_PRIORITY(1728),

	/* R_RULE_DVM Data Variable Mapping */
	DVM_ID(1800),
	DVM_VERSION(1801),
	DVM_BASE_NAME(1802),
	DVM_EXT_VAR_NAME(1803),
	DVM_CONDITION(1804),
	DVM_INT_MAP_PATH(1805),
	DVM_STATUS(1806),
	DVM_OWNER_NAME(1807),
	DVM_OWNER_ZONE(1808),
	DVM_COMMENT(1809),
	DVM_CREATE_TIME(1810),
	DVM_MODIFY_TIME(1811),

	/* R_RULE_DVM_MAP for storing versions of the rules */
	DVM_BASE_MAP_VERSION(1812),
	DVM_BASE_MAP_BASE_NAME(1813),
	DVM_BASE_MAP_OWNER_NAME(1814),
	DVM_BASE_MAP_OWNER_ZONE(1815),
	DVM_BASE_MAP_COMMENT(1816),
	DVM_BASE_MAP_CREATE_TIME(1817),
	DVM_BASE_MAP_MODIFY_TIME(1818),

	/* R_RULE_FNM Function Name Mapping */
	FNM_ID(1900),
	FNM_VERSION(1901),
	FNM_BASE_NAME(1902),
	FNM_EXT_FUNC_NAME(1903),
	FNM_INT_FUNC_NAME(1904),
	FNM_STATUS(1905),
	FNM_OWNER_NAME(1906),
	FNM_OWNER_ZONE(1907),
	FNM_COMMENT(1908),
	FNM_CREATE_TIME(1909),
	FNM_MODIFY_TIME(1910),

	/* R_RULE_FNM_MAP  for storing versions of the rules */
	FNM_BASE_MAP_VERSION(1911),
	FNM_BASE_MAP_BASE_NAME(1912),
	FNM_BASE_MAP_OWNER_NAME(1913),
	FNM_BASE_MAP_OWNER_ZONE(1914),
	FNM_BASE_MAP_COMMENT(1915),
	FNM_BASE_MAP_CREATE_TIME(1916),
	FNM_BASE_MAP_MODIFY_TIME(1917),

	/* R_QUOTA_MAIN */
	QUOTA_USER_ID(2000),
	QUOTA_RESC_ID(2001),
	QUOTA_LIMIT(2002),
	QUOTA_OVER(2003),
	QUOTA_MODIFY_TIME(2004),

	/* R_QUOTA_USAGE */
	QUOTA_USAGE_USER_ID(2010),
	QUOTA_USAGE_RESC_ID(2011),
	QUOTA_USAGE(2012),
	QUOTA_USAGE_MODIFY_TIME(2013),

	/* For use with quotas */
	QUOTA_RESC_NAME(2020),
	QUOTA_USER_NAME(2021),
	QUOTA_USER_ZONE(2022),
	QUOTA_USER_TYPE(2023),

	MSRVC_ID(2100),
	MSRVC_NAME(2101),
	MSRVC_SIGNATURE(2102),
	MSRVC_DOXYGEN(2103),
	MSRVC_VARIATIONS(2104),
	MSRVC_STATUS(2105),
	MSRVC_OWNER_NAME(2106),
	MSRVC_OWNER_ZONE(2107),
	MSRVC_COMMENT(2108),
	MSRVC_CREATE_TIME(2109),
	MSRVC_MODIFY_TIME(2110),
	MSRVC_VERSION(2111),
	MSRVC_HOST(2112),
	MSRVC_LOCATION(2113),
	MSRVC_LANGUAGE(2114),
	MSRVC_TYPE_NAME(2115),
	MSRVC_MODULE_NAME(2116),
	MSRVC_VER_OWNER_NAME(2150),
	MSRVC_VER_OWNER_ZONE(2151),
	MSRVC_VER_COMMENT(2152),
	MSRVC_VER_CREATE_TIME(2153),
	MSRVC_VER_MODIFY_TIME(2154),

	/* Tickets */
	TICKET_ID(2200),
	TICKET_STRING(2201),
	TICKET_TYPE(2202),
	TICKET_USER_ID(2203),
	TICKET_OBJECT_ID(2204),
	TICKET_OBJECT_TYPE(2205),
	TICKET_USES_LIMIT(2206),
	TICKET_USES_COUNT(2207),
	TICKET_EXPIRY_TS(2208),
	TICKET_CREATE_TIME(2209),
	TICKET_MODIFY_TIME(2210),
	TICKET_WRITE_FILE_COUNT(2211),
	TICKET_WRITE_FILE_LIMIT(2212),
	TICKET_WRITE_BYTE_COUNT(2213),
	TICKET_WRITE_BYTE_LIMIT(2214),

	TICKET_ALLOWED_HOST_TICKET_ID(2220),
	TICKET_ALLOWED_HOST(2221),
	TICKET_ALLOWED_USER_TICKET_ID(2222),
	TICKET_ALLOWED_USER_NAME(2223),
	TICKET_ALLOWED_GROUP_TICKET_ID(2224),
	TICKET_ALLOWED_GROUP_NAME(2225),

	TICKET_DATA_NAME(2226),
	TICKET_DATA_COLL_NAME(2227),
	TICKET_COLL_NAME(2228),

	TICKET_OWNER_NAME(2229),
	TICKET_OWNER_ZONE(2230);
	
	private int id;
	
	private Columns( int id) {
		this.id = id;
	}
	
	
	public int getId() {
		return id;
	}
	
	public String getLabel() {
		return toString();
	}
	
	public static Columns findByLabel(String label) {
		label = label.toUpperCase();
		for (Columns c : values()) {
			if (c.name().equals(label)) {
				return c;
			}
		}
		return null;
	}
	
	public static Columns findById(int id) {
		for (Columns c : values()) {
			if (c.getId() == id) {
				return c;
			}
		}
		return null;
	}
	
}
